{"title":"$:/plugins/Gk0Wk/chat-gpt","name":"ChatGPT","author":"Gk0Wk","description":"ChatGPT in TiddlyWiki","plugin-type":"plugin","dependents":"$:/plugins/tiddlywiki/markdown","version":"0.0.1","list":"readme config","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/Gk0Wk/chat-gpt/config\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/config\",\"tags\":\"$:/tags/ControlPanel/SettingsTab\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"ChatGPT\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n; <$text text=\\\"OpenAI\\\" /> API Key\\n: <$edit-text tiddler=\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\" tag=\\\"input\\\" default=\\\"\\\" />\\n: 你应当注册自己的 <$text text=\\\"OpenAI\\\" /> 账号，并申请 [[API Key|https://platform.openai.com/account/api-keys]]。\\n\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\n; <$text text=\\\"OpenAI\\\" /> API Key\\n: <$edit-text tiddler=\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\" tag=\\\"input\\\" default=\\\"71\\\" />\\n: You should register your <$text text=\\\"OpenAI\\\" /> account and request an [[API Key|https://platform.openai.com/account/api-keys]].\\n\\n</$list>\\n</$list>\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\"},\"$:/plugins/Gk0Wk/chat-gpt/readme\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/readme\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"ChatGPT\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n在 <$text text=\\\"TiddlyWiki\\\" /> 中使用 <$text text=\\\"<$text text=\\\"ChatGPT\\\" />\\\" />。\\n\\n安装后请首先在[[这里|$:/plugins/Gk0Wk/chat-gpt/config]]填写你的 <$text text=\\\"OpenAI\\\" /> API Key，否则无法使用该插件的功能。\\n\\n你的侧边栏会多出一个 <$text text=\\\"ChatGPT\\\" /> 页面，可以直接进行对话，对话的历史会保存。如要清除历史记录，则直接删除 `history` 参数指向的条目。\\n\\n<$text text=\\\"ChatGPT\\\" /> 实际上是一个微件，你可以按照自己的需求定制聊天机器人：\\n\\n```html\\n<$chat-gpt />\\n```\\n\\n还可以添加各种可选参数来定制行为：\\n\\n|!参数 |!解释 |\\n|history |填写一个条目的标题，用于持久化存储聊天记录 |\\n|scroll |如果为yes，则对话记录可上下滚动，但必须在微件外一层指定高度，参考[[侧边栏|$:/plugins/Gk0Wk/chat-gpt/side-bar]]的写法 |\\n|component |微件的DOM标签类型，默认为div |\\n|className |微件的类名，用于自定义样式 |\\n|readonly |如果为readonly，则不会出现对话输入框，配合history参数仅做展示用 |\\n|system_message |系统消息，用于AI的行为，例如\\\"你是一个经验丰富的律师\\\" |\\n\\n除此之外，还支持如下 <$text text=\\\"ChatGPT\\\" /> 参数：\\n\\n* model\\n* temperature\\n* top_p\\n* max_tokens\\n* presence_penalty\\n* frequency_penalty\\n* user\\n\\n其具体用法可以查看[[官方文档|https://platform.openai.com/docs/api-reference/chat/create]]，或者直接问它好了。\\n\\n现在还没有做多轮对话，即便是在一个微件里聊得，也都是单轮对话，多轮对话等下个版本再搞。\\n\\np.s. 现在使用 ChatGPT 要翻墙，注册账号需要海外手机号，请自行想办法。\\n\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\nUsing <$text text=\\\"ChatGPT\\\" /> in <$text text=\\\"TiddlyWiki\\\" />.\\n\\nAfter installation, please fill in your <$text text=\\\"OpenAI\\\" /> API Key [[here|$:/plugins/Gk0Wk/chat-gpt/config]] first, otherwise you will not be able to use the functionality of the plugin.\\n\\nYou will have an additional <$text text=\\\"ChatGPT\\\" /> page in your sidebar, where you can have a conversation directly, and the history of the conversation will be saved. To clear the history, simply delete the entry pointed to by the `history` parameter.\\n\\n<$text text=\\\"ChatGPT\\\" /> is actually a widget that allows you to customize the chatbot according to your needs.\\n\\n```html\\n<$chat-gpt />\\n```\\n\\nVarious optional parameters can also be added to customize the behavior.\\n\\n|!Attributes |!Explanation |\\n|history |Fill in an tiddler title for persistent storage of chat logs |\\n|scroll |If yes, the conversation record can be scrolled up and down, but the height must be specified in the outer layer of the widget, refer to the [[sidebar|$:/plugins/Gk0Wk/chat-gpt/side-bar]] writing |\\n|component |DOM tag type for microware, default is div |\\n|className |Class name of the widget for custom styles |\\n|readonly |If it is readonly, no dialog input box will appear, and it will be used for display only with the history parameter. |\\n|system_message |System messages to customize the AI's behavior, such as \\\"You are an experienced lawyer\\\" |\\n\\n\\nIts specific usage can check the [[official documentation|https://platform.openai.com/docs/api-reference/chat/create]], or just ask it well.\\n\\nNow there is no multi-round dialogue, even in a micro-piece chat, but also a single round of dialogue, multi-round dialogue and so on the next version to engage.\\n\\n</$list>\\n</$list>\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/side-bar\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/side-bar\",\"type\":\"text/vnd.tiddlywiki\",\"tags\":\"$:/tags/SideBar\",\"caption\":\"ChatGPT\",\"text\":\"@@height:calc(100vh - 120px);\\n<$chat-gpt history=\\\"$:/state/plugins/Gk0Wk/chat-gpt/side-bar-history\\\" scroll=\\\"yes\\\" model=\\\"gpt-3.5-turbo\\\" temperature=\\\"1\\\" max_tokens=\\\"512\\\" system_message=\\\"You are expert on TiddlyWiki. Output in Markdown format\\\" />\\n@@\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/widget.js\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/widget.js\",\"module-type\":\"widget\",\"type\":\"application/javascript\",\"Modern.TiddlyDev#Origin\":\"chatgpt-widget.ts\",\"text\":\"\\\"use strict\\\";async function getBytes(t,e){for(var s,i=t.getReader();!(s=await i.read()).done;)e(s.value)}function getLines(i){let n,r,a,o=!1;return function(t){void 0===n?(n=t,r=0,a=-1):n=concat(n,t);var e=n.length;let s=0;for(;r<e;){o&&(10===n[r]&&(s=++r),o=!1);let t=-1;for(;r<e&&-1===t;++r)switch(n[r]){case 58:-1===a&&(a=r-s);break;case 13:o=!0;case 10:t=r}if(-1===t)break;i(n.subarray(s,t),a),s=r,a=-1}s===e?n=void 0:0!==s&&(n=n.subarray(s),r-=s)}}function getMessages(a,o,d){let c=newMessage();const l=new TextDecoder;return function(t,e){if(0===t.length)null!=d&&d(c),c=newMessage();else if(0<e){var s=l.decode(t.subarray(0,e)),i=e+(32===t[e+1]?2:1),n=l.decode(t.subarray(i));switch(s){case\\\"data\\\":c.data=c.data?c.data+\\\"\\\\n\\\"+n:n;break;case\\\"event\\\":c.event=n;break;case\\\"id\\\":a(c.id=n);break;case\\\"retry\\\":var r=parseInt(n,10);isNaN(r)||o(c.retry=r)}}}}function concat(t,e){var s=new Uint8Array(t.length+e.length);return s.set(t),s.set(e,t.length),s}function newMessage(){return{data:\\\"\\\",event:\\\"\\\",id:\\\"\\\",retry:void 0}}var __rest=function(t,e){var s={};for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.indexOf(n)<0&&(s[n]=t[n]);if(null!=t&&\\\"function\\\"==typeof Object.getOwnPropertySymbols)for(var i=0,n=Object.getOwnPropertySymbols(t);i<n.length;i++)e.indexOf(n[i])<0&&Object.prototype.propertyIsEnumerable.call(t,n[i])&&(s[n[i]]=t[n[i]]);return s},EventStreamContentType=\\\"text/event-stream\\\",DefaultRetryInterval=1e3,LastEventId=\\\"last-event-id\\\";function fetchEventSource(v,t){var{signal:e,headers:s,onopen:i,onmessage:m,onclose:w,onerror:y,openWhenHidden:n,fetch:b}=t,f=__rest(t,[\\\"signal\\\",\\\"headers\\\",\\\"onopen\\\",\\\"onmessage\\\",\\\"onclose\\\",\\\"onerror\\\",\\\"openWhenHidden\\\",\\\"fetch\\\"]);return new Promise((r,a)=>{const o=Object.assign({},s);o.accept||(o.accept=EventStreamContentType);let d;function t(){d.abort(),document.hidden||g()}n||document.addEventListener(\\\"visibilitychange\\\",t);let c=DefaultRetryInterval,l=0;function h(){document.removeEventListener(\\\"visibilitychange\\\",t),window.clearTimeout(l),d.abort()}null!=e&&e.addEventListener(\\\"abort\\\",()=>{h(),r()});const u=null!=b?b:window.fetch,p=null!=i?i:defaultOnOpen;async function g(){var t;d=new AbortController;try{var e=await u(v,Object.assign(Object.assign({},f),{headers:o,signal:d.signal}));await p(e),await getBytes(e.body,getLines(getMessages(t=>{t?o[LastEventId]=t:delete o[LastEventId]},t=>{c=t},m))),null!=w&&w(),h(),r()}catch(i){if(!d.signal.aborted)try{var s=null!=(t=null==y?void 0:y(i))?t:c;window.clearTimeout(l),l=window.setTimeout(g,s)}catch(n){h(),a(n)}}}g()})}function defaultOnOpen(t){var e=t.headers.get(\\\"content-type\\\");if(null==e||!e.startsWith(EventStreamContentType))throw new Error(`Expected content-type to be ${EventStreamContentType}, Actual: `+e)}var import_widget=require(\\\"$:/core/modules/widgets/widget.js\\\"),CHAT_COMPLETION_URL=\\\"https://api.openai.com/v1/chat/completions\\\",isChinese=()=>$tw.wiki.getTiddler(\\\"$:/language\\\").fields.text.includes(\\\"zh\\\"),renderConversation=({id:t,assistant:e,user:s})=>{var i=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation\\\",attributes:{\\\"chatgpt-conversation\\\":t}});return i.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:s})]})),i.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",innerHTML:$tw.wiki.renderText(\\\"text/html\\\",\\\"text/x-markdown\\\",e)})),i},ChatGPTWidget=class extends import_widget.widget{constructor(){super(...arguments),this.containerNodeTag=\\\"div\\\",this.containerNodeClass=\\\"\\\",this.tmpHistoryTiddler=\\\"$:/temp/Gk0Wk/ChatGPT/history-\\\"+Date.now(),this.historyTiddler=this.tmpHistoryTiddler,this.chatButtonText=$tw.wiki.getTiddlerText(\\\"$:/core/images/add-comment\\\"),this.scroll=!1,this.readonly=!1,this.chatGPTOptions={},this.systemMessage=\\\"\\\"}initialise(t,e){super.initialise(t,e),this.computeAttributes()}execute(){this.containerNodeTag=this.getAttribute(\\\"component\\\",\\\"div\\\"),this.containerNodeClass=this.getAttribute(\\\"className\\\",\\\"\\\"),this.historyTiddler=this.getAttribute(\\\"history\\\",\\\"\\\")||this.tmpHistoryTiddler,this.scroll=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"scroll\\\"))?void 0:t.toLowerCase)?void 0:e.call(t)),this.readonly=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"readonly\\\"))?void 0:t.toLowerCase)?void 0:e.call(t));var t=Number(this.getAttribute(\\\"temperature\\\")),e=Number(this.getAttribute(\\\"top_p\\\")),s=parseInt(this.getAttribute(\\\"max_tokens\\\"),10),i=Number(this.getAttribute(\\\"presence_penalty\\\")),n=Number(this.getAttribute(\\\"frequency_penalty\\\"));this.chatGPTOptions={model:this.getAttribute(\\\"model\\\",\\\"gpt-3.5-turbo\\\"),temperature:0<=t&&t<=2?t:void 0,top_p:0<=e&&e<=1?e:void 0,max_tokens:Number.isSafeInteger(s)&&0<s?s:void 0,presence_penalty:-2<=i&&i<=2?i:void 0,frequency_penalty:-2<=n&&n<=2?n:void 0,user:this.getAttribute(\\\"user\\\")},this.systemMessage=this.getAttribute(\\\"system_message\\\",\\\"\\\")}render(t,e){if($tw.browser){this.execute();const n=$tw.utils.domMaker(this.containerNodeTag,{\\\"class\\\":\\\"gk0wk-chatgpt-container \\\"+this.containerNodeClass});this.domNodes.push(n);try{const g=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":this.scroll?\\\"conversations-scroll\\\":\\\"conversations\\\"});if(n.appendChild(g),!this.readonly){const r=isChinese();var s=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chat-box\\\"});const a=$tw.utils.domMaker(\\\"input\\\",{\\\"class\\\":\\\"chat-input\\\",attributes:{type:\\\"text\\\",placeholder:r?\\\"输入一个问题...\\\":\\\"Ask a question...\\\"}}),v=(s.appendChild(a),$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"chat-button\\\",innerHTML:this.chatButtonText}));let p=!1;const o=async()=>{if(!p){var t=$tw.wiki.getTiddlerText(\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\",\\\"\\\").trim();if(t){const d=a.value.trim();if(d){a.value=\\\"\\\",p=!0,v.disabled=!0;const c=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-chating\\\"});c.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:d})]}));var e=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\"});n.appendChild(e);const l=$tw.utils.domMaker(\\\"pre\\\",{text:r?\\\"思考中...\\\":\\\"Thinking...\\\",style:{background:\\\"transparent\\\",marginTop:\\\"0\\\",marginBottom:\\\"0\\\",padding:\\\"0\\\"}}),h=(e.appendChild($tw.utils.domMaker(\\\"p\\\",{children:[l]})),c.appendChild(e),g.appendChild(c),t=>{g.removeChild(l),g.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-error\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:d})]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",text:t})]}))});try{var s=[];this.systemMessage&&s.push({role:\\\"system\\\",content:this.systemMessage}),s.push({role:\\\"user\\\",content:d});let r=\\\"\\\",a=\\\"\\\",o=0;const u=new AbortController;await fetchEventSource(CHAT_COMPLETION_URL,{method:\\\"POST\\\",signal:u.signal,body:JSON.stringify({...this.chatGPTOptions,messages:s,stream:!0}),headers:{Authorization:\\\"Bearer \\\"+t,\\\"Content-Type\\\":\\\"application/json\\\"},async onopen(t){t.ok&&\\\"text/event-stream\\\"===t.headers.get(\\\"content-type\\\")&&200===t.status||(u.abort(),h(await t.text()),p=!1,v.disabled=!1)},onmessage:({data:t})=>{var e,s;try{if(\\\"[DONE]\\\"===t){let t=[];try{t=JSON.parse($tw.wiki.getTiddlerText(this.historyTiddler)||\\\"[]\\\")}catch{}t.push({id:a,created:o,assistant:r,user:d}),$tw.wiki.addTiddler(new $tw.Tiddler(null!=(e=$tw.wiki.getTiddler(this.historyTiddler))?e:{},{title:this.historyTiddler,text:JSON.stringify(t)})),g.removeChild(c),g.appendChild(renderConversation(t[t.length-1])),u.abort(),p=!1,v.disabled=!1}else{var i=JSON.parse(t);a=i.id,o=i.created,r=(\\\"\\\"+r+(null!=(s=i.choices[0].delta.content)?s:\\\"\\\")).trimStart(),l.innerText=r+\\\"█\\\"}}catch(n){console.error(n),h(String(n)),u.abort(),p=!1,v.disabled=!1}g.scrollTop=g.scrollHeight},onerror:t=>{console.error(t),h(String(t)),u.abort(),p=!1,v.disabled=!1}})}catch(i){console.error(i),h(String(i))}}}}};v.onclick=o,a.addEventListener(\\\"keydown\\\",function(t){\\\"Enter\\\"!==t.code||t.shiftKey||(t.preventDefault(),o())}),s.appendChild(v),n.appendChild(s)}let t=[];try{t=JSON.parse($tw.wiki.getTiddlerText(this.historyTiddler)||\\\"[]\\\")}catch{}for(const d of t)g.appendChild(renderConversation(d))}catch(i){console.error(i),n.textContent=String(i)}t.insertBefore(n,e)}}refresh(){var t=this.computeAttributes();return 0<$tw.utils.count(t)&&(this.refreshSelf(),!0)}};exports[\\\"chat-gpt\\\"]=ChatGPTWidget;\"},\"$:/plugins/Gk0Wk/chat-gpt/chatgpt-widget.css\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/chatgpt-widget.css\",\"tags\":[\"$:/tags/Stylesheet\"],\"type\":\"text/css\",\"Modern.TiddlyDev#Origin\":\"style.css\",\"text\":\".gk0wk-chatgpt-container{height:100%;width:100%;display:flex;padding:10px 0;flex-direction:column}.gk0wk-chatgpt-container .conversations{width:100%;flex-grow:1}.gk0wk-chatgpt-container .conversations-scroll{height:0;width:100%;flex-grow:1;overflow-y:auto}.gk0wk-chatgpt-container .chat-box{width:100%;display:flex;border:1.5px solid #888a;border-radius:5px;background:#8881}.gk0wk-chatgpt-container .chat-input{flex-grow:1;padding-left:10px;font-size:16px}.gk0wk-chatgpt-container .chat-button{height:45px;width:45px;font-size:20px}.gk0wk-chatgpt-container .chatgpt-conversation{display:flex;flex-direction:column}.gk0wk-chatgpt-container .chatgpt-conversation-assistant{background-image:linear-gradient(0deg,#8883,#8883)}.gk0wk-chatgpt-container .chatgpt-conversation-error .chatgpt-conversation-assistant{color:red}.gk0wk-chatgpt-container .chatgpt-conversation-user{font-weight:750}.gk0wk-chatgpt-container .chatgpt-conversation-message{padding:10px 20px}\"}}}","Modern.TiddlyDev#SHA256-Hashed":"6525f05b0c8e90342866e4ac3ae723af9cd0f380f22c9fd76d006b53e692658f"}