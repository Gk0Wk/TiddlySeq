{"title":"$:/plugins/Gk0Wk/chat-gpt","name":"ChatGPT","author":"Gk0Wk","description":"ChatGPT in TiddlyWiki","plugin-type":"plugin","dependents":"$:/plugins/tiddlywiki/markdown","version":"0.0.3","list":"readme config","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/Gk0Wk/chat-gpt/config\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/config\",\"tags\":\"$:/tags/ControlPanel/SettingsTab\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"ChatGPT\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n; <$text text=\\\"OpenAI\\\" /> API Key\\n: <$edit-text tiddler=\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\" tag=\\\"input\\\" default=\\\"\\\" />\\n: 你应当注册自己的 <$text text=\\\"OpenAI\\\" /> 账号，并申请 [[API Key|https://platform.openai.com/account/api-keys]]。\\n\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\n; <$text text=\\\"OpenAI\\\" /> API Key\\n: <$edit-text tiddler=\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\" tag=\\\"input\\\" default=\\\"71\\\" />\\n: You should register your <$text text=\\\"OpenAI\\\" /> account and request an [[API Key|https://platform.openai.com/account/api-keys]].\\n\\n</$list>\\n</$list>\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\"},\"$:/plugins/Gk0Wk/chat-gpt/readme\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/readme\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"ChatGPT\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n在 <$text text=\\\"TiddlyWiki\\\" /> 中使用 <$text text=\\\"ChatGPT\\\" />。\\n\\n安装后请首先在[[这里|$:/plugins/Gk0Wk/chat-gpt/config]]填写你的 <$text text=\\\"OpenAI\\\" /> API Key，否则无法使用该插件的功能。\\n\\n你的侧边栏会多出一个 <$text text=\\\"ChatGPT\\\" /> 页面，可以直接进行对话，对话的历史会保存。如要清除历史记录，则直接删除 `history` 参数指向的条目。\\n\\n<$text text=\\\"ChatGPT\\\" /> 实际上是一个微件，你可以按照自己的需求定制聊天机器人：\\n\\n```html\\n<$chat-gpt />\\n```\\n\\n还可以添加各种可选参数来定制行为：\\n\\n|!参数 |!解释 |\\n|history |填写一个条目的标题，用于持久化存储聊天记录 |\\n|scroll |如果为yes，则对话记录可上下滚动，但必须在微件外一层指定高度，参考[[侧边栏|$:/plugins/Gk0Wk/chat-gpt/side-bar]]的写法 |\\n|component |微件的DOM标签类型，默认为div |\\n|className |微件的类名，用于自定义样式 |\\n|readonly |如果为readonly，则不会出现对话输入框，配合history参数仅做展示用 |\\n|system_message |系统消息，用于AI的行为，例如\\\"你是一个经验丰富的律师\\\" |\\n\\n除此之外，还支持如下 <$text text=\\\"ChatGPT\\\" /> 参数：\\n\\n* model\\n* temperature\\n* top_p\\n* max_tokens\\n* presence_penalty\\n* frequency_penalty\\n* user\\n\\n其具体用法可以查看[[官方文档|https://platform.openai.com/docs/api-reference/chat/create]]，或者直接问它好了。\\n\\n现在还没有做多轮对话，即便是在一个微件里聊得，也都是单轮对话，多轮对话等下个版本再搞。\\n\\np.s. 现在使用 ChatGPT 要翻墙，注册账号需要海外手机号，请自行想办法。\\n\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\nUsing <$text text=\\\"ChatGPT\\\" /> in <$text text=\\\"TiddlyWiki\\\" />.\\n\\nAfter installation, please fill in your <$text text=\\\"OpenAI\\\" /> API Key [[here|$:/plugins/Gk0Wk/chat-gpt/config]] first, otherwise you will not be able to use the functionality of the plugin.\\n\\nYou will have an additional <$text text=\\\"ChatGPT\\\" /> page in your sidebar, where you can have a conversation directly, and the history of the conversation will be saved. To clear the history, simply delete the entry pointed to by the `history` parameter.\\n\\n<$text text=\\\"ChatGPT\\\" /> is actually a widget that allows you to customize the chatbot according to your needs.\\n\\n```html\\n<$chat-gpt />\\n```\\n\\nVarious optional parameters can also be added to customize the behavior.\\n\\n|!Attributes |!Explanation |\\n|history |Fill in an tiddler title for persistent storage of chat logs |\\n|scroll |If yes, the conversation record can be scrolled up and down, but the height must be specified in the outer layer of the widget, refer to the [[sidebar|$:/plugins/Gk0Wk/chat-gpt/side-bar]] writing |\\n|component |DOM tag type for microware, default is div |\\n|className |Class name of the widget for custom styles |\\n|readonly |If it is readonly, no dialog input box will appear, and it will be used for display only with the history parameter. |\\n|system_message |System messages to customize the AI's behavior, such as \\\"You are an experienced lawyer\\\" |\\n\\n\\nIts specific usage can check the [[official documentation|https://platform.openai.com/docs/api-reference/chat/create]], or just ask it well.\\n\\nNow there is no multi-round dialogue, even in a micro-piece chat, but also a single round of dialogue, multi-round dialogue and so on the next version to engage.\\n\\n</$list>\\n</$list>\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/side-bar\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/side-bar\",\"type\":\"text/vnd.tiddlywiki\",\"tags\":\"$:/tags/SideBar\",\"caption\":\"ChatGPT\",\"text\":\"@@height:calc(100vh - 120px);\\n<$chat-gpt history=\\\"$:/state/plugins/Gk0Wk/chat-gpt/side-bar-history\\\" scroll=\\\"yes\\\" model=\\\"gpt-3.5-turbo\\\" temperature=\\\"1\\\" max_tokens=\\\"512\\\" system_message=\\\"You known much on TiddlyWiki. You should answer in Markdown format\\\" />\\n@@\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/widget.js\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/widget.js\",\"module-type\":\"widget\",\"type\":\"application/javascript\",\"Modern.TiddlyDev#Origin\":\"chatgpt-widget.ts\",\"text\":\"\\\"use strict\\\";async function getBytes(t,e){for(var i,s=t.getReader();!(i=await s.read()).done;)e(i.value)}function getLines(s){let r,n,a,o=!1;return function(t){void 0===r?(r=t,n=0,a=-1):r=concat(r,t);var e=r.length;let i=0;for(;n<e;){o&&(10===r[n]&&(i=++n),o=!1);let t=-1;for(;n<e&&-1===t;++n)switch(r[n]){case 58:-1===a&&(a=n-i);break;case 13:o=!0;case 10:t=n}if(-1===t)break;s(r.subarray(i,t),a),i=n,a=-1}i===e?r=void 0:0!==i&&(r=r.subarray(i),n-=i)}}function getMessages(a,o,l){let d=newMessage();const c=new TextDecoder;return function(t,e){if(0===t.length)null!=l&&l(d),d=newMessage();else if(0<e){var i=c.decode(t.subarray(0,e)),s=e+(32===t[e+1]?2:1),r=c.decode(t.subarray(s));switch(i){case\\\"data\\\":d.data=d.data?d.data+\\\"\\\\n\\\"+r:r;break;case\\\"event\\\":d.event=r;break;case\\\"id\\\":a(d.id=r);break;case\\\"retry\\\":var n=parseInt(r,10);isNaN(n)||o(d.retry=n)}}}}function concat(t,e){var i=new Uint8Array(t.length+e.length);return i.set(t),i.set(e,t.length),i}function newMessage(){return{data:\\\"\\\",event:\\\"\\\",id:\\\"\\\",retry:void 0}}var __rest=function(t,e){var i={};for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(i[r]=t[r]);if(null!=t&&\\\"function\\\"==typeof Object.getOwnPropertySymbols)for(var s=0,r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(i[r[s]]=t[r[s]]);return i},EventStreamContentType=\\\"text/event-stream\\\",DefaultRetryInterval=1e3,LastEventId=\\\"last-event-id\\\";function fetchEventSource(v,t){var{signal:e,headers:i,onopen:s,onmessage:m,onclose:w,onerror:y,openWhenHidden:r,fetch:b}=t,f=__rest(t,[\\\"signal\\\",\\\"headers\\\",\\\"onopen\\\",\\\"onmessage\\\",\\\"onclose\\\",\\\"onerror\\\",\\\"openWhenHidden\\\",\\\"fetch\\\"]);return new Promise((n,a)=>{const o=Object.assign({},i);o.accept||(o.accept=EventStreamContentType);let l;function t(){l.abort(),document.hidden||p()}r||document.addEventListener(\\\"visibilitychange\\\",t);let d=DefaultRetryInterval,c=0;function h(){document.removeEventListener(\\\"visibilitychange\\\",t),window.clearTimeout(c),l.abort()}null!=e&&e.addEventListener(\\\"abort\\\",()=>{h(),n()});const u=null!=b?b:window.fetch,g=null!=s?s:defaultOnOpen;async function p(){var t;l=new AbortController;try{var e=await u(v,Object.assign(Object.assign({},f),{headers:o,signal:l.signal}));await g(e),await getBytes(e.body,getLines(getMessages(t=>{t?o[LastEventId]=t:delete o[LastEventId]},t=>{d=t},m))),null!=w&&w(),h(),n()}catch(s){if(!l.signal.aborted)try{var i=null!=(t=null==y?void 0:y(s))?t:d;window.clearTimeout(c),c=window.setTimeout(p,i)}catch(r){h(),a(r)}}}p()})}function defaultOnOpen(t){var e=t.headers.get(\\\"content-type\\\");if(null==e||!e.startsWith(EventStreamContentType))throw new Error(`Expected content-type to be ${EventStreamContentType}, Actual: `+e)}var CHAT_COMPLETION_URL=\\\"https://api.openai.com/v1/chat/completions\\\",isChinese=()=>$tw.wiki.getTiddler(\\\"$:/language\\\").fields.text.includes(\\\"zh\\\"),renderConversation=({id:t,assistant:e,user:i},s,r,n,a,o)=>{let l;a&&((l=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"edit-button\\\",innerHTML:r,attributes:{title:s?\\\"重新生成问题\\\":\\\"Regenerate question\\\"}})).onclick=()=>a(i));let d;return o&&((d=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"delete-button\\\",innerHTML:n,attributes:{title:s?\\\"删除问题\\\":\\\"Delete question\\\"}})).onclick=()=>o()),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation\\\",attributes:{\\\"chatgpt-conversation\\\":t},children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:i}),...d?[d]:[],...l?[l]:[]]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",innerHTML:$tw.wiki.renderText(\\\"text/html\\\",\\\"text/x-markdown\\\",e)})]})},renderChatingConversation=(t,e,i)=>{var s=$tw.utils.domMaker(\\\"pre\\\",{text:t?\\\"思考中...\\\":\\\"Thinking...\\\",style:{background:\\\"transparent\\\",marginTop:\\\"0\\\",marginBottom:\\\"0\\\",padding:\\\"0\\\"}});const r=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-chating\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:e})]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",children:[$tw.utils.domMaker(\\\"p\\\",{children:[s]})]})]});return{conversation:r,answerBox:s,printError:t=>{i.removeChild(r),i.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-error\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:e})]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",text:t})]}))}}},historyManager=i=>({getHistory:()=>{let t=[];try{t=JSON.parse($tw.wiki.getTiddlerText(i)||\\\"[]\\\")}catch{}return t},setHistory:t=>{var e;$tw.wiki.addTiddler(new $tw.Tiddler(null!=(e=$tw.wiki.getTiddler(i))?e:{},{title:i,text:JSON.stringify(t)}))}}),import_widget=require(\\\"$:/core/modules/widgets/widget.js\\\"),ChatGPTWidget=class extends import_widget.widget{constructor(){super(...arguments),this.containerNodeTag=\\\"div\\\",this.containerNodeClass=\\\"\\\",this.tmpHistoryTiddler=\\\"$:/temp/Gk0Wk/ChatGPT/history-\\\"+Date.now(),this.historyTiddler=this.tmpHistoryTiddler,this.chatButtonText=$tw.wiki.getTiddlerText(\\\"$:/core/images/add-comment\\\"),this.editButtonText=$tw.wiki.getTiddlerText(\\\"$:/core/images/edit-button\\\"),this.deleteButtonText=$tw.wiki.getTiddlerText(\\\"$:/core/images/delete-button\\\"),this.scroll=!1,this.readonly=!1,this.chatGPTOptions={},this.systemMessage=\\\"\\\"}initialise(t,e){super.initialise(t,e),this.computeAttributes()}execute(){this.containerNodeTag=this.getAttribute(\\\"component\\\",\\\"div\\\"),this.containerNodeClass=this.getAttribute(\\\"className\\\",\\\"\\\"),this.historyTiddler=this.getAttribute(\\\"history\\\",\\\"\\\")||this.tmpHistoryTiddler,this.scroll=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"scroll\\\"))?void 0:t.toLowerCase)?void 0:e.call(t)),this.readonly=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"readonly\\\"))?void 0:t.toLowerCase)?void 0:e.call(t));var t=Number(this.getAttribute(\\\"temperature\\\")),e=Number(this.getAttribute(\\\"top_p\\\")),i=parseInt(this.getAttribute(\\\"max_tokens\\\"),10),s=Number(this.getAttribute(\\\"presence_penalty\\\")),r=Number(this.getAttribute(\\\"frequency_penalty\\\"));this.chatGPTOptions={model:this.getAttribute(\\\"model\\\",\\\"gpt-3.5-turbo\\\"),temperature:0<=t&&t<=2?t:void 0,top_p:0<=e&&e<=1?e:void 0,max_tokens:Number.isSafeInteger(i)&&0<i?i:void 0,presence_penalty:-2<=s&&s<=2?s:void 0,frequency_penalty:-2<=r&&r<=2?r:void 0,user:this.getAttribute(\\\"user\\\")},this.systemMessage=this.getAttribute(\\\"system_message\\\",\\\"\\\")}render(t,e){if($tw.browser){this.execute();const m=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":this.scroll?\\\"conversations-scroll\\\":\\\"conversations\\\"});var i=$tw.utils.domMaker(this.containerNodeTag,{\\\"class\\\":\\\"gk0wk-chatgpt-container \\\"+this.containerNodeClass,children:[m]});t.insertBefore(i,e),this.domNodes.push(i);try{const w=isChinese(),{getHistory:y,setHistory:b}=historyManager(this.historyTiddler);let v;if(!this.readonly){const r=$tw.utils.domMaker(\\\"input\\\",{\\\"class\\\":\\\"chat-input\\\",attributes:{type:\\\"text\\\",placeholder:w?\\\"输入一个问题...\\\":\\\"Ask a question...\\\"}}),f=(v=t=>r.value=t,$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"chat-button\\\",innerHTML:this.chatButtonText,attributes:{title:w?\\\"进行对话\\\":\\\"Chat\\\"}}));i.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chat-box\\\",children:[r,f]}));let p=!1;const n=async()=>{if(!p){var t=$tw.wiki.getTiddlerText(\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\",\\\"\\\").trim();if(t){const d=r.value.trim();if(d){r.value=\\\"\\\",p=!0,f.disabled=!0;const{conversation:c,answerBox:h,printError:u}=renderChatingConversation(w,d,m);m.appendChild(c);try{var e=[];this.systemMessage&&e.push({role:\\\"system\\\",content:this.systemMessage}),e.push({role:\\\"user\\\",content:d});let a=\\\"\\\",o=\\\"\\\",l=0;const g=new AbortController;await fetchEventSource(CHAT_COMPLETION_URL,{method:\\\"POST\\\",signal:g.signal,body:JSON.stringify({...this.chatGPTOptions,messages:e,stream:!0}),headers:{Authorization:\\\"Bearer \\\"+t,\\\"Content-Type\\\":\\\"application/json\\\"},async onopen(t){t.ok&&\\\"text/event-stream\\\"===t.headers.get(\\\"content-type\\\")&&200===t.status||(g.abort(),u(await t.text()),p=!1,f.disabled=!1)},onmessage:({data:t})=>{var e;try{if(\\\"[DONE]\\\"===t){const r={id:o,created:l,assistant:a,user:d},n=(b([...y(),r]),m.removeChild(c),renderConversation(r,w,this.editButtonText,this.deleteButtonText,v,()=>{m.removeChild(n),b(y().filter(({id:t})=>t!==r.id))}));m.appendChild(n),g.abort(),p=!1,f.disabled=!1}else{var i=JSON.parse(t);o=i.id,l=i.created,a=(\\\"\\\"+a+(null!=(e=i.choices[0].delta.content)?e:\\\"\\\")).trimStart(),h.innerText=a+\\\"█\\\"}}catch(s){console.error(s),u(String(s)),g.abort(),p=!1,f.disabled=!1}m.scrollTop=m.scrollHeight},onerror:t=>{console.error(t),u(String(t)),g.abort(),p=!1,f.disabled=!1}})}catch(i){console.error(i),u(String(i))}}}}};f.onclick=n,r.addEventListener(\\\"keydown\\\",function(t){\\\"Enter\\\"!==t.code||t.shiftKey||(t.preventDefault(),n())})}for(const a of y()){const o=renderConversation(a,w,this.editButtonText,this.deleteButtonText,v,this.readonly?void 0:()=>{m.removeChild(o),b(y().filter(({id:t})=>t!==a.id))});m.appendChild(o)}}catch(s){console.error(s),i.textContent=String(s)}}}refresh(t){var e=this.computeAttributes();return 0<$tw.utils.count(e)?(this.refreshSelf(),!0):!(null==(e=t[this.historyTiddler])||!e.deleted||(this.refreshSelf(),0))}};exports[\\\"chat-gpt\\\"]=ChatGPTWidget;\"},\"$:/plugins/Gk0Wk/chat-gpt/chatgpt-widget.css\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/chatgpt-widget.css\",\"tags\":[\"$:/tags/Stylesheet\"],\"type\":\"text/css\",\"Modern.TiddlyDev#Origin\":\"style.css\",\"text\":\".gk0wk-chatgpt-container{height:100%;width:100%;display:flex;padding:10px 0;flex-direction:column}.gk0wk-chatgpt-container .conversations{width:100%;flex-grow:1}.gk0wk-chatgpt-container .conversations-scroll{height:0;width:100%;flex-grow:1;overflow-y:auto}.gk0wk-chatgpt-container .chat-box{width:100%;display:flex;border:1.5px solid #888a;border-radius:5px;background:#8881}.gk0wk-chatgpt-container .chat-input{flex-grow:1;padding-left:10px;font-size:16px}.gk0wk-chatgpt-container .chat-button{height:45px;width:45px;font-size:20px}.gk0wk-chatgpt-container .chatgpt-conversation{display:flex;flex-direction:column}.gk0wk-chatgpt-container .chatgpt-conversation-assistant{background-image:linear-gradient(0deg,#8883,#8883)}.gk0wk-chatgpt-container .chatgpt-conversation-error .chatgpt-conversation-assistant{color:red}.gk0wk-chatgpt-container .chatgpt-conversation-user{font-weight:750}.gk0wk-chatgpt-container .chatgpt-conversation-message{padding:10px 20px;position:relative}.gk0wk-chatgpt-container .chatgpt-conversation-message .edit-button{position:absolute;right:0;top:10px}.gk0wk-chatgpt-container .chatgpt-conversation-message .delete-button{position:absolute;right:25px;top:10px}\"}}}","Modern.TiddlyDev#SHA256-Hashed":"5c3a8e3021acd855ff38da4065d2c26c471ed79c44b22b799959253a724bd390"}