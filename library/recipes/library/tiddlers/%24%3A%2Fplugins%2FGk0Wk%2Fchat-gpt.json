{"title":"$:/plugins/Gk0Wk/chat-gpt","name":"ChatGPT","author":"Gk0Wk","description":"ChatGPT in TiddlyWiki","plugin-type":"plugin","dependents":"$:/plugins/tiddlywiki/markdown","version":"0.0.4","list":"readme config","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/Gk0Wk/chat-gpt/config\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/config\",\"tags\":\"$:/tags/ControlPanel/SettingsTab\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"ChatGPT\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n; <$text text=\\\"OpenAI\\\" /> API Key\\n: <$edit-text tiddler=\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\" tag=\\\"input\\\" default=\\\"\\\" />\\n: 你应当注册自己的 <$text text=\\\"OpenAI\\\" /> 账号，并申请 [[API Key|https://platform.openai.com/account/api-keys]]。\\n\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\n; <$text text=\\\"OpenAI\\\" /> API Key\\n: <$edit-text tiddler=\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\" tag=\\\"input\\\" default=\\\"71\\\" />\\n: You should register your <$text text=\\\"OpenAI\\\" /> account and request an [[API Key|https://platform.openai.com/account/api-keys]].\\n\\n</$list>\\n</$list>\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\"},\"$:/plugins/Gk0Wk/chat-gpt/readme\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/readme\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"ChatGPT\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n\\n在 <$text text=\\\"TiddlyWiki\\\" /> 中使用 <$text text=\\\"ChatGPT\\\" />。\\n\\n安装后请首先在[[这里|$:/plugins/Gk0Wk/chat-gpt/config]]填写你的 <$text text=\\\"OpenAI\\\" /> API Key，否则无法使用该插件的功能。\\n\\n你的侧边栏会多出一个 <$text text=\\\"ChatGPT\\\" /> 页面，可以直接进行对话，对话的历史会保存。如要清除历史记录，则直接删除 `history` 参数指向的条目。\\n\\n<$text text=\\\"ChatGPT\\\" /> 实际上是一个微件，你可以按照自己的需求定制聊天机器人：\\n\\n```html\\n<$chat-gpt />\\n```\\n\\n还可以添加各种可选参数来定制行为：\\n\\n|!参数 |!解释 |\\n|history |填写一个条目的标题，用于持久化存储聊天记录 |\\n|scroll |如果为yes，则对话记录可上下滚动，但必须在微件外一层指定高度，参考[[侧边栏|$:/plugins/Gk0Wk/chat-gpt/side-bar]]的写法 |\\n|component |微件的DOM标签类型，默认为div |\\n|className |微件的类名，用于自定义样式 |\\n|readonly |如果为readonly，则不会出现对话输入框，配合history参数仅做展示用 |\\n|system_message |系统消息，用于AI的行为，例如\\\"你是一个经验丰富的律师\\\" |\\n\\n除此之外，还支持如下 <$text text=\\\"ChatGPT\\\" /> 参数：\\n\\n* model\\n* temperature\\n* top_p\\n* max_tokens\\n* presence_penalty\\n* frequency_penalty\\n* user\\n\\n其具体用法可以查看[[官方文档|https://platform.openai.com/docs/api-reference/chat/create]]，或者直接问它好了。\\n\\n现在还没有做多轮对话，即便是在一个微件里聊得，也都是单轮对话，多轮对话等下个版本再搞。\\n\\np.s. 现在使用 ChatGPT 要翻墙，注册账号需要海外手机号，请自行想办法。\\n\\n!! 高级\\n\\n如果在微件中嵌套自己的 action，就可以在对话完成时拿到回答的结果，这需要你知道该如何编写一个支持 action 的微件。输出的结果保存在 `output-text` 变量中。\\n\\n同时，在对话完成时你也可以捕获到微件的冒泡事件，以及全局事件，二者分别使用`addEventListener`和`$tw.hooks.addHook`(事件名称就是`chat-gpt`)来实现。如下是事件负载的类型定义：\\n\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n\\nUsing <$text text=\\\"ChatGPT\\\" /> in <$text text=\\\"TiddlyWiki\\\" />.\\n\\nAfter installation, please fill in your <$text text=\\\"OpenAI\\\" /> API Key [[here|$:/plugins/Gk0Wk/chat-gpt/config]] first, otherwise you will not be able to use the functionality of the plugin.\\n\\nYou will have an additional <$text text=\\\"ChatGPT\\\" /> page in your sidebar, where you can have a conversation directly, and the history of the conversation will be saved. To clear the history, simply delete the entry pointed to by the `history` parameter.\\n\\n<$text text=\\\"ChatGPT\\\" /> is actually a widget that allows you to customize the chatbot according to your needs.\\n\\n```html\\n<$chat-gpt />\\n```\\n\\nVarious optional parameters can also be added to customize the behavior.\\n\\n|!Attributes |!Explanation |\\n|history |Fill in an tiddler title for persistent storage of chat logs |\\n|scroll |If yes, the conversation record can be scrolled up and down, but the height must be specified in the outer layer of the widget, refer to the [[sidebar|$:/plugins/Gk0Wk/chat-gpt/side-bar]] writing |\\n|component |DOM tag type for microware, default is div |\\n|className |Class name of the widget for custom styles |\\n|readonly |If it is readonly, no dialog input box will appear, and it will be used for display only with the history parameter. |\\n|system_message |System messages to customize the AI's behavior, such as \\\"You are an experienced lawyer\\\" |\\n\\n\\nIts specific usage can check the [[official documentation|https://platform.openai.com/docs/api-reference/chat/create]], or just ask it well.\\n\\nNow there is no multi-round dialogue, even in a micro-piece chat, but also a single round of dialogue, multi-round dialogue and so on the next version to engage.\\n\\n!! Advance\\n\\nIf you nest your own action in the widget, you can get the result of the answer when the conversation is completed, which requires that you know how to write a widget that supports actions. The output is stored in the `output-text` variable.\\n\\nAt the same time, you can also catch bubbling events of the widget when the conversation completes, as well as global events, both using `addEventListener` and `$tw.hooks.addHook` (the event name is `chat-gpt`) respectively. The following is the type definition of the event load.\\n\\n</$list>\\n</$list>\\n\\n```typescript\\ninterface ChatCompletionEvent {\\n  event: Event;\\n  type: 'chat-gpt';\\n  name: 'completion-finish';\\n  paramObject: {\\n    id: string;        // Chat id from OpenAI\\n    created: Date;     // Chat time\\n    assistant: string; // Answer of ChatGPT\\n    user: string;      // Your question\\n  };\\n  widget: ChatGPTWidget;\\n  historyTiddler: string;\\n}\\n```\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/side-bar\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/side-bar\",\"type\":\"text/vnd.tiddlywiki\",\"tags\":\"$:/tags/SideBar\",\"caption\":\"ChatGPT\",\"text\":\"@@height:calc(100vh - 120px);\\n<$chat-gpt history=\\\"$:/state/plugins/Gk0Wk/chat-gpt/side-bar-history\\\" scroll=\\\"yes\\\" model=\\\"gpt-3.5-turbo\\\" temperature=\\\"1\\\" max_tokens=\\\"512\\\" system_message=\\\"You known much on TiddlyWiki. You should answer in Markdown format\\\" />\\n@@\\n\"},\"$:/plugins/Gk0Wk/chat-gpt/widget.js\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/widget.js\",\"module-type\":\"widget\",\"type\":\"application/javascript\",\"Modern.TiddlyDev#Origin\":\"chatgpt-widget.ts\",\"text\":\"\\\"use strict\\\";async function getBytes(t,e){for(var i,s=t.getReader();!(i=await s.read()).done;)e(i.value)}function getLines(s){let r,n,a,o=!1;return function(t){void 0===r?(r=t,n=0,a=-1):r=concat(r,t);var e=r.length;let i=0;for(;n<e;){o&&(10===r[n]&&(i=++n),o=!1);let t=-1;for(;n<e&&-1===t;++n)switch(r[n]){case 58:-1===a&&(a=n-i);break;case 13:o=!0;case 10:t=n}if(-1===t)break;s(r.subarray(i,t),a),i=n,a=-1}i===e?r=void 0:0!==i&&(r=r.subarray(i),n-=i)}}function getMessages(a,o,l){let d=newMessage();const c=new TextDecoder;return function(t,e){if(0===t.length)null!=l&&l(d),d=newMessage();else if(0<e){var i=c.decode(t.subarray(0,e)),s=e+(32===t[e+1]?2:1),r=c.decode(t.subarray(s));switch(i){case\\\"data\\\":d.data=d.data?d.data+\\\"\\\\n\\\"+r:r;break;case\\\"event\\\":d.event=r;break;case\\\"id\\\":a(d.id=r);break;case\\\"retry\\\":var n=parseInt(r,10);isNaN(n)||o(d.retry=n)}}}}function concat(t,e){var i=new Uint8Array(t.length+e.length);return i.set(t),i.set(e,t.length),i}function newMessage(){return{data:\\\"\\\",event:\\\"\\\",id:\\\"\\\",retry:void 0}}var __rest=function(t,e){var i={};for(r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(i[r]=t[r]);if(null!=t&&\\\"function\\\"==typeof Object.getOwnPropertySymbols)for(var s=0,r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(i[r[s]]=t[r[s]]);return i},EventStreamContentType=\\\"text/event-stream\\\",DefaultRetryInterval=1e3,LastEventId=\\\"last-event-id\\\";function fetchEventSource(v,t){var{signal:e,headers:i,onopen:s,onmessage:m,onclose:w,onerror:y,openWhenHidden:r,fetch:b}=t,T=__rest(t,[\\\"signal\\\",\\\"headers\\\",\\\"onopen\\\",\\\"onmessage\\\",\\\"onclose\\\",\\\"onerror\\\",\\\"openWhenHidden\\\",\\\"fetch\\\"]);return new Promise((n,a)=>{const o=Object.assign({},i);o.accept||(o.accept=EventStreamContentType);let l;function t(){l.abort(),document.hidden||p()}r||document.addEventListener(\\\"visibilitychange\\\",t);let d=DefaultRetryInterval,c=0;function h(){document.removeEventListener(\\\"visibilitychange\\\",t),window.clearTimeout(c),l.abort()}null!=e&&e.addEventListener(\\\"abort\\\",()=>{h(),n()});const u=null!=b?b:window.fetch,g=null!=s?s:defaultOnOpen;async function p(){var t;l=new AbortController;try{var e=await u(v,Object.assign(Object.assign({},T),{headers:o,signal:l.signal}));await g(e),await getBytes(e.body,getLines(getMessages(t=>{t?o[LastEventId]=t:delete o[LastEventId]},t=>{d=t},m))),null!=w&&w(),h(),n()}catch(s){if(!l.signal.aborted)try{var i=null!=(t=null==y?void 0:y(s))?t:d;window.clearTimeout(c),c=window.setTimeout(p,i)}catch(r){h(),a(r)}}}p()})}function defaultOnOpen(t){var e=t.headers.get(\\\"content-type\\\");if(null==e||!e.startsWith(EventStreamContentType))throw new Error(`Expected content-type to be ${EventStreamContentType}, Actual: `+e)}var CHAT_COMPLETION_URL=\\\"https://api.openai.com/v1/chat/completions\\\",isChinese=()=>$tw.wiki.getTiddler(\\\"$:/language\\\").fields.text.includes(\\\"zh\\\"),renderConversation=({id:t,assistant:e,user:i,created:s},r,n,a,o,l)=>{let d;o&&((d=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"edit-button\\\",innerHTML:n,attributes:{title:r?\\\"重新生成问题\\\":\\\"Regenerate question\\\"}})).onclick=()=>o(i));let c;return l&&((c=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"delete-button\\\",innerHTML:a,attributes:{title:r?\\\"删除问题\\\":\\\"Delete question\\\"}})).onclick=()=>l()),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation\\\",attributes:{\\\"chatgpt-conversation\\\":t},children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"conversation-datetime\\\",text:new Date(1e3*s).toLocaleString()}),$tw.utils.domMaker(\\\"p\\\",{text:i}),...c?[c]:[],...d?[d]:[]]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",innerHTML:$tw.wiki.renderText(\\\"text/html\\\",\\\"text/x-markdown\\\",e)})]})},renderChatingConversation=(t,e,i)=>{var s=$tw.utils.domMaker(\\\"pre\\\",{text:t?\\\"思考中...\\\":\\\"Thinking...\\\",style:{background:\\\"transparent\\\",marginTop:\\\"0\\\",marginBottom:\\\"0\\\",padding:\\\"0\\\"}});const r=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-chating\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"conversation-datetime\\\",text:(new Date).toLocaleString()}),$tw.utils.domMaker(\\\"p\\\",{text:e})]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",children:[$tw.utils.domMaker(\\\"p\\\",{children:[s]})]})]});return{conversation:r,answerBox:s,printError:t=>{i.removeChild(r),i.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-error\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:e})]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",text:t})]}))}}},historyManager=i=>({getHistory:()=>{let t=[];try{t=JSON.parse($tw.wiki.getTiddlerText(i)||\\\"[]\\\")}catch{}return t},setHistory:t=>{var e;$tw.wiki.addTiddler(new $tw.Tiddler(null!=(e=$tw.wiki.getTiddler(i))?e:{},{title:i,text:JSON.stringify(t),type:\\\"application/json\\\"}))}}),import_widget=require(\\\"$:/core/modules/widgets/widget.js\\\"),ChatGPTWidget=class extends import_widget.widget{constructor(){super(...arguments),this.containerNodeTag=\\\"div\\\",this.containerNodeClass=\\\"\\\",this.tmpHistoryTiddler=\\\"$:/temp/Gk0Wk/ChatGPT/history-\\\"+Date.now(),this.historyTiddler=this.tmpHistoryTiddler,this.chatButtonText=$tw.wiki.getTiddlerText(\\\"$:/core/images/add-comment\\\"),this.editButtonText=$tw.wiki.getTiddlerText(\\\"$:/core/images/edit-button\\\"),this.deleteButtonText=$tw.wiki.getTiddlerText(\\\"$:/core/images/delete-button\\\"),this.scroll=!1,this.readonly=!1,this.chatGPTOptions={},this.systemMessage=\\\"\\\"}initialise(t,e){super.initialise(t,e),this.computeAttributes()}execute(){this.containerNodeTag=this.getAttribute(\\\"component\\\",\\\"div\\\"),this.containerNodeClass=this.getAttribute(\\\"className\\\",\\\"\\\"),this.historyTiddler=this.getAttribute(\\\"history\\\",\\\"\\\")||this.tmpHistoryTiddler,this.scroll=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"scroll\\\"))?void 0:t.toLowerCase)?void 0:e.call(t)),this.readonly=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"readonly\\\"))?void 0:t.toLowerCase)?void 0:e.call(t));var t=Number(this.getAttribute(\\\"temperature\\\")),e=Number(this.getAttribute(\\\"top_p\\\")),i=parseInt(this.getAttribute(\\\"max_tokens\\\"),10),s=Number(this.getAttribute(\\\"presence_penalty\\\")),r=Number(this.getAttribute(\\\"frequency_penalty\\\"));this.chatGPTOptions={model:this.getAttribute(\\\"model\\\",\\\"gpt-3.5-turbo\\\"),temperature:0<=t&&t<=2?t:void 0,top_p:0<=e&&e<=1?e:void 0,max_tokens:Number.isSafeInteger(i)&&0<i?i:void 0,presence_penalty:-2<=s&&s<=2?s:void 0,frequency_penalty:-2<=r&&r<=2?r:void 0,user:this.getAttribute(\\\"user\\\")},this.systemMessage=this.getAttribute(\\\"system_message\\\",\\\"\\\"),this.makeChildWidgets()}render(t,e){if($tw.browser){this.execute();const b=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":this.scroll?\\\"conversations-scroll\\\":\\\"conversations\\\"});var i=$tw.utils.domMaker(this.containerNodeTag,{\\\"class\\\":\\\"gk0wk-chatgpt-container \\\"+this.containerNodeClass,children:[b]});t.insertBefore(i,e),this.domNodes.push(i);try{const T=isChinese(),{getHistory:f,setHistory:k}=historyManager(this.historyTiddler);let y;if(!this.readonly){const r=$tw.utils.domMaker(\\\"input\\\",{\\\"class\\\":\\\"chat-input\\\",attributes:{type:\\\"text\\\",placeholder:T?\\\"输入一个问题...\\\":\\\"Ask a question...\\\"}}),x=(y=t=>r.value=t,$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"chat-button\\\",innerHTML:this.chatButtonText,attributes:{title:T?\\\"进行对话\\\":\\\"Chat\\\"}}));i.appendChild($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chat-box\\\",children:[r,x]}));let w=!1;const n=async h=>{if(!w){var t=$tw.wiki.getTiddlerText(\\\"$:/plugins/Gk0Wk/chat-gpt/openai-api-key\\\",\\\"\\\").trim();if(t){const u=r.value.trim();if(u){r.value=\\\"\\\",w=!0,x.disabled=!0;const{conversation:g,answerBox:p,printError:v}=renderChatingConversation(T,u,b);b.appendChild(g);try{var e=[];this.systemMessage&&e.push({role:\\\"system\\\",content:this.systemMessage}),e.push({role:\\\"user\\\",content:u});let l=\\\"\\\",d=\\\"\\\",c=0;const m=new AbortController;await fetchEventSource(CHAT_COMPLETION_URL,{method:\\\"POST\\\",signal:m.signal,body:JSON.stringify({...this.chatGPTOptions,messages:e,stream:!0}),headers:{Authorization:\\\"Bearer \\\"+t,\\\"Content-Type\\\":\\\"application/json\\\"},async onopen(t){t.ok&&\\\"text/event-stream\\\"===t.headers.get(\\\"content-type\\\")&&200===t.status||(m.abort(),v(await t.text()),w=!1,x.disabled=!1)},onmessage:({data:t})=>{var e,i;try{if(\\\"[DONE]\\\"===t){const a={id:d,created:c,assistant:l,user:u},o=(k([...f(),a]),b.removeChild(g),renderConversation(a,T,this.editButtonText,this.deleteButtonText,y,()=>{b.removeChild(o),k(f().filter(({id:t})=>t!==a.id))}));b.appendChild(o),this.setVariable(\\\"output-text\\\",l),null!=(e=this.invokeAction)&&e.call(this,this,h);var s={event:h,type:\\\"chat-gpt\\\",name:\\\"completion-finish\\\",paramObject:{...a,created:new Date(1e3*a.created)},widget:this,historyTiddler:this.historyTiddler};this.dispatchEvent(s),$tw.hooks.invokeHook(\\\"chat-gpt\\\",s),m.abort(),w=!1,x.disabled=!1}else{var r=JSON.parse(t);d=r.id,c=r.created,l=(\\\"\\\"+l+(null!=(i=r.choices[0].delta.content)?i:\\\"\\\")).trimStart(),p.innerText=l+\\\"█\\\"}}catch(n){console.error(n),v(String(n)),m.abort(),w=!1,x.disabled=!1}b.scrollTop=b.scrollHeight},onerror:t=>{console.error(t),v(String(t)),m.abort(),w=!1,x.disabled=!1}})}catch(i){console.error(i),v(String(i))}}}}};x.onclick=n,r.addEventListener(\\\"keydown\\\",function(t){\\\"Enter\\\"!==t.code||t.shiftKey||(t.preventDefault(),n(t))})}for(const a of f()){const o=renderConversation(a,T,this.editButtonText,this.deleteButtonText,y,this.readonly?void 0:()=>{b.removeChild(o),k(f().filter(({id:t})=>t!==a.id))});b.appendChild(o)}}catch(s){console.error(s),i.textContent=String(s)}}}refresh(t){var e=this.computeAttributes();return 0<$tw.utils.count(e)||null!=(e=t[this.historyTiddler])&&e.deleted?(this.refreshSelf(),!0):this.refreshChildren(t)}};exports[\\\"chat-gpt\\\"]=ChatGPTWidget;\"},\"$:/plugins/Gk0Wk/chat-gpt/chatgpt-widget.css\":{\"title\":\"$:/plugins/Gk0Wk/chat-gpt/chatgpt-widget.css\",\"tags\":[\"$:/tags/Stylesheet\"],\"type\":\"text/css\",\"Modern.TiddlyDev#Origin\":\"style.css\",\"text\":\".gk0wk-chatgpt-container{height:100%;width:100%;display:flex;padding:10px 0;flex-direction:column}.gk0wk-chatgpt-container .conversations{width:100%;flex-grow:1}.gk0wk-chatgpt-container .conversations-scroll{height:0;width:100%;flex-grow:1;overflow-y:auto}.gk0wk-chatgpt-container .chat-box{width:100%;display:flex;border:1.5px solid #888a;border-radius:5px;background:#8881}.gk0wk-chatgpt-container .chat-input{flex-grow:1;padding-left:10px;font-size:16px}.gk0wk-chatgpt-container .chat-button{height:45px;width:45px;font-size:20px}.gk0wk-chatgpt-container .chatgpt-conversation{display:flex;flex-direction:column}.gk0wk-chatgpt-container .chatgpt-conversation-assistant{background-image:linear-gradient(0deg,#8883,#8883)}.gk0wk-chatgpt-container .chatgpt-conversation-error .chatgpt-conversation-assistant{color:red}.gk0wk-chatgpt-container .chatgpt-conversation-user{font-weight:750;padding-top:18px!important}.gk0wk-chatgpt-container .chatgpt-conversation-message{padding:10px 20px;position:relative}.gk0wk-chatgpt-container .chatgpt-conversation-message .conversation-datetime{position:absolute;left:0;top:0;user-select:none;opacity:.5;font-size:12px;font-weight:500px}.gk0wk-chatgpt-container .chatgpt-conversation-message .edit-button{position:absolute;right:0;top:18px}.gk0wk-chatgpt-container .chatgpt-conversation-message .delete-button{position:absolute;right:25px;top:18px}\"}}}","Modern.TiddlyDev#SHA256-Hashed":"37534864b40cb082acccf948a514e6762a0f129f4536fc25f307f034c0517372"}